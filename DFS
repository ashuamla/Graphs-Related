import java.util.*;

public class DFS {
	private static int V;
	LinkedList<Integer> list[];
	public DFS(int n) {
		V=n;
		list=new LinkedList[V];
		for(int i=0; i<V; i++ )
		{
			list[i]=new LinkedList<Integer>();
		}
	}

	private void addEdge(int i, int j) {
		list[i].add(j);
		
		
	}
	
	
	
	public static void main(String[] args)
	{
		DFS d=new DFS(5);
		d.addEdge(0,1);
		d.addEdge(0, 2);
		d.addEdge(1, 4);
		d.addEdge(2, 3);
		d.addEdge(3, 4);
		
		d.traverse(0);
	}

	private void traverse(int src) {
		boolean checked[]=new boolean[V];
		dfsPrint(src,checked);
	}
	void dfsPrint(int src, boolean[] checked)
	{
		checked[src]=true;
		System.out.println(src);
		
		Iterator<Integer> it=list[src].listIterator();
		while(it.hasNext())
		{
			int x=it.next();
			if(!checked[x])
				dfsPrint(x,checked);
		}
		
	}

	

}
