
public class Dijkstra {
	int V;
	Dijkstra(int v)
	{
		V=v;
	}
	
	int minDist(int[] dist, boolean[] checked)
	{
		int index=-1, min=Integer.MAX_VALUE;
		for(int i=0; i<V; i++)
		{
			if(!checked[i] && dist[i]<min)
			{
				min=dist[i];
				index=i;
			}
		}
		return index;
	}
	
	
	public void shortest(int[][] graph, int src)
	{
		int dist[]=new int[V];
		boolean checked[]=new boolean[V];
		for(int i=0; i<V; i++)
		{
			dist[i]=Integer.MAX_VALUE;
			checked[i]=false;
		}
		
		dist[src]=0;
		for(int count=0; count<V-1; count++)
		{
			int i=minDist(dist, checked);
			checked[i]=true;
			
			for(int j=0; j<V; j++)
			{
				if(!checked[j] && graph[i][j]!=0 && dist[i]+graph[i][j]<dist[j])
				{
					dist[j]=dist[i]+graph[i][j];
				}
			}
		}
		for(int i=0; i<V; i++)
		{
			System.out.println(i+"\t"+dist[i]);
		}
	}
	public static void main(String[] args)
	{
		Dijkstra s=new Dijkstra(4);
		int[][] graph={ {0,2,3,0},
						{0,0,0,3},
						{0,-2,0,1},
						{0,0,0,0}};
		s.shortest(graph, 0);
	}

}
