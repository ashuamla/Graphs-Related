import java.util.*;
import java.util.Iterator;
import java.util.LinkedList;


public class BFS {
	public static int V;
	private LinkedList<Integer> list[]; 
	@SuppressWarnings("unchecked")
	BFS(int n)
	{
		V=n;
		list=new LinkedList[V]; 
		for(int i=0; i<n; i++)
		{
			list[i]=new LinkedList<Integer>();
		}
	} 
	
	private void addEdge(int i, int j) {
		list[i].add(j); 
		
	}

	
	private void traverse(int src) {
		
		boolean checked[]=new boolean[V];
		LinkedList<Integer> queue=new LinkedList<Integer>();
		checked[src]=true;
		queue.add(src);
		while(queue.size()!=0)
		{
			src=queue.poll();
			System.out.println(src);
			Iterator<Integer> it=list[src].listIterator();
			while(it.hasNext())
			{
				int x=it.next();
				if(!checked[x])
				{queue.add(x);
				checked[x]=true;
				}
			}
		}
	}
		
	public static void main(String[] args)
	{
		
		BFS b=new BFS(5);
		b.addEdge(0,1);
		b.addEdge(0, 2);
		b.addEdge(1, 4);
		b.addEdge(2, 3);
		b.addEdge(3, 4);
		
		b.traverse(0);
		
	}

	


	

}
